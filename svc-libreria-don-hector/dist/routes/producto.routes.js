"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.productoRoutes = void 0;
const express_1 = require("express");
const product_controller_1 = require("../controllers/product.controller");
const book_controller_1 = require("../controllers/book.controller");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const roles_1 = require("../dictionaries/roles");
const { EMPLEADO, SUPERVISOR, CLIENTE, GERENTE } = roles_1.ROLES;
const router = (0, express_1.Router)();
exports.productoRoutes = router;
const controller = new product_controller_1.ProductController();
const bookController = new book_controller_1.BookController();
router.get('/', bookController.searchBooks.bind(bookController));
router.use(auth_middleware_1.authMiddleware);
router.get('/product', (0, auth_middleware_1.roleMiddleware)([EMPLEADO, SUPERVISOR, CLIENTE, GERENTE]), controller.getProduct.bind(controller));
router.post("/add", (0, auth_middleware_1.roleMiddleware)([SUPERVISOR, GERENTE]), controller.addProduct.bind(controller));
router.put("/update/:id", (0, auth_middleware_1.roleMiddleware)([SUPERVISOR, GERENTE]), controller.updateProduct.bind(controller));
router.get("/Allproducts", (0, auth_middleware_1.roleMiddleware)([EMPLEADO, SUPERVISOR, CLIENTE, GERENTE]), controller.getAllProducts.bind(controller));
router.delete("/delete/:id", (0, auth_middleware_1.roleMiddleware)([SUPERVISOR]), controller.deleteProduct.bind(controller));
router.get("/top-rated", (0, auth_middleware_1.roleMiddleware)([CLIENTE]), controller.getTopRated.bind(controller));
router.put("/bulk-update", (0, auth_middleware_1.roleMiddleware)([SUPERVISOR, GERENTE]), controller.bulkUpdateProducts.bind(controller));
